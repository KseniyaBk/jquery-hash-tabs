// Generated by CoffeeScript 1.7.1

/*
	hash-tabs

	hash-tabs_test.coffee

	@author Sean
	
	@note Created on 2014-06-07 by PhpStorm
	@note uses Codoc
	@see https://github.com/coffeedoc/codo
 */

(function() {
  (function($) {

    /*
    	======== A Handy Little QUnit Reference ========
    	http://api.qunitjs.com/
    
    	Test methods:
    	module(name, {[setup][ ,teardown]})
    	test(name, callback)
    	expect(numberOfAssertions)
    	stop(increment)
    	start(decrement)
    	Test assertions:
    	ok(value, [message])
    	equal(actual, expected, [message])
    	notEqual(actual, expected, [message])
    	deepEqual(actual, expected, [message])
    	notDeepEqual(actual, expected, [message])
    	strictEqual(actual, expected, [message])
    	notStrictEqual(actual, expected, [message])
    	throws(block, [expected], [message])
     */
    "use strict";
    module("jQuery#hash-tabs", {
      setup: function() {
        return this.elems = $("#qunit-fixture").children();
      }
    });
    test("is chainable", function() {
      expect(1);
      return strictEqual(this.elems.hash - tabs(), this.elems, "should be chainable");
    });
    test("is hash-tabs", function() {
      expect(1);
      return strictEqual(this.elems.hash - tabs().text(), "hash-tabs0hash-tabs1hash-tabs2", "should be hash-tabs");
    });
    module("jQuery.hash-tabs");
    test("is hash-tabs", function() {
      expect(2);
      strictEqual($.hash - tabs(), "hash-tabs.", "should be hash-tabs");
      return strictEqual($.hash - tabs({
        punctuation: "!"
      }), "hash-tabs!", "should be thoroughly hash-tabs");
    });
    module(":hash-tabs selector", {
      setup: function() {
        return this.elems = $("#qunit-fixture").children();
      }
    });
    return test("is hash-tabs", function() {
      expect(1);
      return deepEqual(this.elems.filter(":hash-tabs").get(), this.elems.last().get(), "knows hash-tabs when it sees it");
    });
  })(jQuery);

}).call(this);

//# sourceMappingURL=hash-tabs_test.map
